class Solution {
    public int findgcd(int a, int b) {
        if (b == 0) {
            return a;
        }
        return findgcd(b, a % b);
    }

    public int findlcm(int a, int b) {
        return Math.abs((a / findgcd(a, b)) * b);
    }

    public List<Integer> replaceNonCoprimes(int[] nums) {
        Stack<Integer> st=new Stack<>();

        for(int num:nums){
            int curr=num;

            while(!st.isEmpty() && findgcd(st.peek(),curr)>1){
                curr=findlcm(st.pop(),curr);
            }
            st.push(curr);
        }
        return new ArrayList<>(st);
    }
}
