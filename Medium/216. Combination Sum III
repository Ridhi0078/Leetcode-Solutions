class Solution {
    List<List<Integer>> result = new ArrayList<>();

    public List<List<Integer>> combinationSum3(int k, int n) {
        List<Integer> list = new ArrayList<>();
        backtrack(1, k, n, list);
        return result;
    }

    public void backtrack(int start, int k, int n, List<Integer> list) {
        if (list.size() == k && n == 0) {
            result.add(new ArrayList<>(list));
            return;
        }

        if (list.size() > k || k < 0) {
            return;
        }

        for (int i = start; i <= 9; i++) {
            list.add(i);
            backtrack(i + 1, k, n - i, list);
            list.remove(list.size() - 1);
        }
    }
}
