class Solution {
    public int computeArea(int ax1, int ay1, int ax2, int ay2, int bx1, int by1, int bx2, int by2) {
        int area = 0;
        int overlapArea = 0;
        int cx1 = 0, cx2 = 0, cy1 = 0, cy2 = 0;

        area = (ax2 - ax1) * (ay2 - ay1) + (bx2 - bx1) * (by2 - by1);

        cx1 = Math.max(ax1, bx1);
        cx2 = Math.min(ax2, bx2);
        cy1 = Math.max(ay1, by1);
        cy2 = Math.min(ay2, by2);

        overlapArea = Math.max(0, cx2 - cx1) * Math.max(0, cy2 - cy1);

        return area - overlapArea;

    }
}
// answer = sum of two areas - overlap area
// sum = (ax2-ax1)*(ay2-ay1) + (bx2-bx1)*(by2-by1);
//      = 6 * 4 + 9 * 3= 24+27= 51
// overlap rectangle coordinates:
// cx1 = max(ax1, bx1) = 0 
// cx2 = min(ax2, bx2) = 3
// cy1 = max(ay1, by1) = 0
// cy2 = min(ay2, by2) = 2

// overlap area = max(0, cx2 - cx1) * max(0, cy2 - cy1)
//                = 3*2=6
// 51-6=45  
