class Solution {
    public static int binarySearch(int nums[], int l, int r, int sum) {
        int ans = -1;

        while (l <= r) {
            int mid = l + (r - l) / 2;

            if (nums[mid] < sum) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }

    public int triangleNumber(int[] nums) {
        // sum of two sides is greater than the third side
        int n = nums.length;
        if (n < 3) {
            return 0;
        }
        Arrays.sort(nums);
        int count = 0;
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                int sum = nums[i] + nums[j];

                int k = binarySearch(nums, j + 1, n - 1, sum);

                if (k != -1) {
                    count += (k - j);
                }
            }
        }
        return count;
    }
}
