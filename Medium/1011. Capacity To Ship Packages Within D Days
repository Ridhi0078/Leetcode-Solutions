class Solution {
    public int shipWithinDays(int[] weights, int days) {
        int max=0;
        int sum=0;
        for(int i=0;i<weights.length;i++){
            max=Math.max(weights[i],max);
            sum+=weights[i];
        }

        int low=max;
        int high=sum;
        int ans=-1;
        while(low<=high){
            int mid=low+(high-low)/2;

            if(isPossible(weights, days, mid)){
                ans=mid;
                high=mid-1;
            }
            else{
                low=mid+1;
            }
        }
        return ans;
    }

    public boolean isPossible(int weights[], int days, int mid){
        int totalDays=1;
        int load=0;

        for(int i=0;i<weights.length;i++){
            if(load+weights[i]>mid){
                totalDays+=1;
                load=weights[i];
            }
            else{
                load+=weights[i];
            }
        }
        return totalDays<=days;
    }
}
